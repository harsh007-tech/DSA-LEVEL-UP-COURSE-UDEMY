class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
       
        //DECLARATION
        vector<vector<int>> result;
        int s=0,n=nums.size(),e=n-1,q1=0,counter=0,targetSum = 0,q2,currentSum=-1;
        unordered_set<int> refTab;
        
        sort(nums.begin(),nums.end());
        
        //Iterating through loop  
        for(int i=0;i<n-3;i++)
            {//2pointer approach for pairsum
              s = i+1;
              e = n-1;
            if(nums[s]==nums[i])
            {continue;}
             if(nums[e]==nums[e-1])
            {e--;}
                    while(s<e)
                    {     currentSum=nums[i];
                          currentSum+=nums[s];
                          currentSum+=nums[e];

                         if(currentSum==targetSum)
                            {
                             result.push_back({nums[i],nums[s],nums[e]});
                             s++;
                             e--;
                            }
                         else if(currentSum<targetSum)
                            {s++;}
                         else{e--;}
                    }
            } 
        return result;
        
    }
};
